import matplotlib as plt
import numpy as np
x = np.linspace(0, 10, 100)
y = np.sin(x)
plt.plot(x,y)
import matplotlib.pyplot as plt
plt.plot(x,y)
plt.show()
(x, _), (_, _) = tf.keras.datasets.mnist.load_data()
import tensorflow as tf
(x, _), (_, _) = tf.keras.datasets.mnist.load_data()
x
x.shape
x[0]
img = x[0]
img.shape
plt.plot(img[0], img[1])
plt.show()
plt.imshow(img)
plt.show()
plt.imshow(img, cmap="gray")
plt.show()
plt.imshow(img)
plt.show()
plt.imshow(x[0])
plt.show()
fig, axes = plt.subplots(5, 5)
fig
axes
for i, ax in enumerate(axes.flatten()):
	ax.imshow(x[i])
	ax.axis("off")
plt.tight_layout()
plt.show()
for i, ax in enumerate(axes.flatten()):
	ax.imshow(x[i])
	ax.axis("off")
plt.show()
plt.tight_layout()
plt.show()
fig, axes = plt.subplots(10, 10)
for i, ax in enumerate(axes.flatten()):
	ax.imshow(x[i])
	ax.axis("off")
plt.tight_layout()
plt.show()
ax.imshow()?
?ax.imshow()
ax.imshow?
help(ax.imshow())
help(ax.imshow)
import matplotlib as m
help(ax.imshow)
m.colors.Colormap
print(m.colors.Colormap)
print(m.colors.Colormap())
print(m.colors.Colormap)
help(m.colors.Colormap)
exit
import readline
help(readline)
readline.write_history_file(filename="matplotlib_plot_digits.txt")
readline.write_history_file()
import os
os.listdir()
with open("history", "w") as f:
	for i in range(readline.get_current_history_length()):
		f.write(readline.get_history_item(i+1)+"\n")
